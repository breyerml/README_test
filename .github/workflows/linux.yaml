name: Linux (Ubuntu) CPU
on:
  workflow_dispatch:
  push:
jobs:
  Linux-Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_type: [Debug, Release]
        compiler: [g++, clang++]
    steps:
      - name: "Install cmake 3.31.0"
        uses: lukka/get-cmake@v3.31.0
      - name: "Update system"
        run: |
          sudo apt update
          sudo apt upgrade
          sudo apt autoremove
      - name: "Install Compiler"
        if: ${{ matrix.compiler }} == "g++"
        run: |
          sudo apt install g++
          g++ --version
      - name: "Install clang++"
        if: ${{ matrix.compiler }} == "clang++"
        run: |
          sudo apt install clang
          sudo apt install libomp-dev
          clang++ --version
      - name: "Download PLSSVM"
        run: |
          git clone https://github.com/SC-SGS/PLSSVM.git
      - name: "Install Python dependencies"
        run: |
          cd PLSSVM
          pip install -r install/python_requirements.txt
      - name: "Configure PLSSVM using CMake"
        run: |
          cd PLSSVM
          git checkout regression
          cmake --preset openmp_test -DCMAKE_CXX_COMPILER=${{ matrix.compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DPLSSVM_TARGET_PLATFORMS="cpu" -DPLSSVM_ENABLE_LANGUAGE_BINDINGS=ON -DPLSSVM_ENABLE_PERFORMANCE_TRACKING=ON -DPLSSVM_TEST_FILE_NUM_DATA_POINTS=50 -DPLSSVM_TEST_FILE_NUM_FEATURES=20 -DPLSSVM_ENABLE_LTO=OFF
      - name: "Build PLSSVM"
        run: |
          cd PLSSVM
          cmake --build --preset openmp_test --config ${{ matrix.build_type }}
          echo "${GITHUB_WORKSPACE}/PLSSVM/build" >> $GITHUB_PATH
      - name: "Run tests"
        run: |
          cd PLSSVM
          ctest --preset openmp_test -C ${{ matrix.build_type }} --parallel 2
