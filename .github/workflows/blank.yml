name: macOS CPU
on:
  workflow_dispatch:
  push:
jobs:
  macOS-Test:
    runs-on: macos-13
    strategy:
      matrix:
        build_type: [Debug, Release]
    steps:
      - name: "Install cmake 3.31.0"
        uses: lukka/get-cmake@v3.31.0
      - name: "Install LLVM and Clang"
        uses: KyleMayes/install-llvm-action@v2
        with:
          version: "15.0"
      - name: "Install dependencies via brew"
        run: |
          brew install python3
          brew install numpy
          brew install libomp
      - name: "Install Python dependencies"
        run: |
          python3 -m pip install -U pip
          pip install argparse scikit-learn humanize --break-system-packages
      - name: "Set PYTHONPATH"
        run: |
          export PYTHONPATH=$(python3 -c "import site; print(site.getsitepackages()[0])")
          echo "PYTHONPATH=$PYTHONPATH" >> $GITHUB_ENV
      - name: "Configure PLSSVM using CMake"
        run: |
          git clone https://github.com/SC-SGS/PLSSVM.git
          cd PLSSVM
          git checkout regression
          export LDFLAGS="-L/opt/homebrew/opt/libomp/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/libomp/include"
          cmake --preset openmp_test -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DPLSSVM_TARGET_PLATFORMS="cpu" -DPLSSVM_ENABLE_LANGUAGE_BINDINGS=ON -DPLSSVM_ENABLE_PERFORMANCE_TRACKING=ON -DPLSSVM_TEST_FILE_NUM_DATA_POINTS=50 -DPLSSVM_TEST_FILE_NUM_FEATURES=20 -DPLSSVM_ENABLE_LTO=OFF
      - name: "Build PLSSVM"
        shell: bash
        run: |
          cd PLSSVM
          export LDFLAGS="-L/opt/homebrew/opt/libomp/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/libomp/include"
          cmake --build --preset openmp_test --config ${{ matrix.build_type }}
          echo "${GITHUB_WORKSPACE}/PLSSVM/build" >> $GITHUB_PATH
      - name: "Run tests"
        run: |
          cd PLSSVM
          export LDFLAGS="-L/opt/homebrew/opt/libomp/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/libomp/include"
          ctest --preset openmp_test -C ${{ matrix.build_type }} -E ".*executable.*" --parallel 2
