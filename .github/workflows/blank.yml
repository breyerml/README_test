# This is a basic workflow to help you get started with Actions

name: format

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-24.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: install clang-format
        run: |
          sudo apt install libomp-dev clang-format
          

      # Runs a set of commands using the runners shell
      - name: Check version
        run: |
          clang-format --version

      - name: Format test
        run: |
          git clone https://github.com/constracktor/PLSSVM.git
          cd PLSSVM
          git checkout hpx_start
          cmake --preset all -DPLSSVM_TARGET_PLATFORMS="cpu" -DPLSSVM_ENABLE_FORMATTING=ON

      - name: Check Formatting
        continue-on-error: true
        run: |
          cd PLSSVM
          cmake --build --preset all --target check-clang-format || true
          status=$?
          if [ $status -ne 0 ]; then
            echo "Formatting errors found!"
            cmake --build --preset all --target clang-format > clang-format-patch 2>&1
            ls 
            exit $status
          else
            echo "No formatting errors found!"
          fi
          
      - uses: actions/upload-artifact@v4
        with:
          name: clang-format-patch
          path: PLSSVM/clang-format-patch.txt
          if-no-files-found: ignore
